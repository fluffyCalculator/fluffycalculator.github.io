{"version":3,"sources":["calculators/main.js","components/Daily/Box.tsx","calculators/daily.ts","components/utils/Button.tsx","components/utils/Input.tsx","components/utils/Label.tsx","components/Daily/Filter.tsx","components/Daily/Context.tsx","components/Daily/UniverseSwitch.tsx","components/Daily/Daily.tsx","calculators/fluffy.ts","components/Fluffy/Context.tsx","components/Fluffy/InputSection.tsx","components/Fluffy/LevelUpTable.tsx","components/Fluffy/RunTimeTable.tsx","components/Fluffy/Stats.tsx","components/Fluffy/UniverseSwitch.tsx","components/Fluffy/Template.tsx","components/Fluffy/Fluffy.tsx","components/NavBar.tsx","App.tsx","index.tsx"],"names":["dailyModifiers","minDamage","description","str","prettify","this","getMult","getWeight","minMaxStep","chance","maxDamage","plague","stacks","count","Math","ceil","sqrt","icon","incompatible","stackDesc","weakness","large","dedication","famine","badStrength","badHealth","badMapStrength","badMapHealth","crits","trimpCritChanceUp","trimpCritChanceDown","bogged","dysfunctional","oddTrimpNerf","evenTrimpBuff","karma","window","daily_universe","getMaxStacks","floor","toxic","realStrength","pow","bloodthirst","getFreq","freq","max","text","next","iconOnEnemy","explosive","mult","slippery","rampage","mutimps","size","getMaxCellNum","empower","stacksToAdd","worldStacksOnly","pressure","round","timePerStack","mirrored","reflectChance","getReflectChance","toString","testWeights","min","results","x","result","push","reflectDamage","attack","random","metallicThumb","hemmorrhage","res","getResources","length","charAt","toUpperCase","slice","strength","parseInt","blockU1","number","numberTmp","prettifySub","toExponential","base","log","game","options","menu","standardNotation","enabled","logBase","global","logNotBase","exponent","suffices","suffix","suf2","parseFloat","replace","toFixed","isRewardActive","reward","universe","evolution","level","boughtEarly","minus","WeekBox","className","clsx","baseBox","Box","object","useState","expanded","setExpanded","value","date","preview","tier","seed","mods","undefined","onClick","id","String","join","role","title","Object","keys","map","i","makeDaily","times","returnable","todayOfWeek","getDailyTimeString","z","dayIndex","lastWeek","blank","dailyObj","getDailyChallenge","dailyValue","getDailyHeliumValueDaily","countDailyWeightDaily","getPrettyTimeString","reduce","prev","curr","hasOwnProperty","findColor","lastSeed","tiers","add","getDayOfWeek","today","Date","setUTCDate","getUTCDate","getUTCDay","year","getUTCFullYear","month","getUTCMonth","day","seedStr","getRandomIntSeeded","minIncl","maxExcl","toReturn","sin","seededRandom","everythingInArrayGreaterEqual","smaller","bigger","dateSeed","Number","weightTarget","modifierList","totalChance","dailyObject","item","chanceMod","currentWeight","maxLoops","sizeCount","sizeTarget","mainLoop","maxZLoops","firstChoice","selectedIndex","roll","checkedTotal","y","selectedMod","modObj","modWeight","modSize","splice","incompatibleIndex","indexOf","daily","weight","maybeMakeDaily","force","newestSeed","dailies","Button","label","variant","type","Input","onChange","defaultValue","disabled","MemoInput","React","memo","Label","children","filterTypes","toMatch","FilterBox","updateDailiesFiltered","useContext","DailyContext","setEnabled","Filter","showFilter","setShowFilter","flipAll","setFlipAll","filter","idx","e","target","createContext","DailyProvider","setDailies","Provider","updateDailies","goodMods","matched","forEach","document","getElementById","style","visibility","forceDailies","UniverseSwitch","handleClick","clickedNumber","days","Daily","extend","require","fluffyInstance","string","name","firstLevel","iceBonus","expBonus","exp","purchasedFluffyPrestigeBonus","purchasedFluffyExpBonus","zoneYouPortal","dailyBonus","heirloomBonus","graphNextIce","spiresCompleted","instantUpdating","minutesPerRun","averageWorshippers","currentExp","traps","autoBattle","portal","displayData","xpPerRun","currentZone","table","levelUpTable","percentToLevel","bonesToLevel","XPhr","save","fluffyExp","fluffyExp2","fluffyPrestige","fluffyPrestige2","lastPortal","lastRadonPortal","bestFluffyExp","zone","atMaxEvo","getLevel","getFirstLevel","removeExp","getExpBonus","num","getExpGrowth","owned","oneTimers","Battlescruff","maxEnemyLevel","getUpgradeExp","expInLevel","getMinZoneForExp","Classy","getBaseExp","xpFromZone","start","end","mcalc1","mcalc2","minimumZone","Curious","Cunning","addSpireBonus","spireNumber","total","spireXP","getHeirloomValue","bonus","b","getTableCell","prevRuns","getTableData","data","runs","startingLevel","lev","getLevelUpTable","maxZone","zoneLastLeveled","currentRelativeExp","neededExpForLevel","key","updateUniverse","getDailyBonus","updateDisplayData","pasteSaveActions","gameSave","stats","valueTotal","world","heirlooms","Staff","FluffyExp","currentBonus","autoBattleData","dailyChallenge","talents","purchased","jobs","Worshipper","fluffyAbility","playerSpire","Knowledge","uberNature","empowerments","Ice","saveLocalStorage","localStorage","setItem","JSON","stringify","getLocalStorage","saveObj","parse","getItem","changeVar","Capable","split","active","getDailyHeliumValue","FluffyContext","FluffyProvider","0","fluffyInstances","setFluffyInstance","shown","setShown","anotherInstance","console","old","TrueFalseButton","colors","isActive","setIsActive","colorClasses","MemoTrueFalseButton","InputSection","index","instance","renderParent","labels","innerText","handleInput","locked","prevProps","nextProps","LevelUpTable","sformat","s","v","RunTimeTable","second","time","cell","Stats","addCommas","width","SaveBox","onPaste","show","setShow","textRef","useRef","current","ref","placeholder","MemoSaveBox","Template","setUpdate","useEffect","forceRefresh","useCallback","changeUniverse","ev","save_string","clipboardData","getData","decompressFromBase64","handle_paste","Fluffy","xmlns","viewBox","d","TITLES","swapTheme","to","body","classList","ThemeSwitcher","contains","Tab","location","NavBar","useLocation","currentLocation","pathname","App","basename","hashType","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.df896865.chunk.js","sourcesContent":["export var dailyModifiers = {\n  minDamage: {\n    description: function (str) {\n      return (\n        \"Trimp min damage reduced by \" +\n        prettify(this.getMult(str) * 100) +\n        \"% (additive).\"\n      );\n    },\n    getMult: function (str) {\n      return 0.1 + (str - 1) * 0.01;\n    },\n    getWeight: function (str) {\n      return 1 / ((1.2 + (1 - this.getMult(str))) / 2 / 1.1) - 1;\n    },\n    minMaxStep: [41, 90, 1],\n    chance: 1,\n  },\n  maxDamage: {\n    description: function (str) {\n      return (\n        \"Trimp max damage increased by \" +\n        prettify(this.getMult(str) * 100) +\n        \"% (additive).\"\n      );\n    },\n    getMult: function (str) {\n      return str;\n    },\n    getWeight: function (str) {\n      return 1 - (1.2 + (1 + str)) / 2 / 1.1;\n    },\n    minMaxStep: [1, 5, 0.25],\n    chance: 1,\n  },\n  plague: {\n    //Half of electricity\n    description: function (str) {\n      return (\n        \"Enemies stack a debuff with each attack, damaging Trimps for \" +\n        prettify(this.getMult(str, 1) * 100) +\n        \"% of total health per turn per stack, resets on Trimp death.\"\n      );\n    },\n    getMult: function (str, stacks) {\n      return 0.01 * str * stacks;\n    },\n    getWeight: function (str) {\n      var count = Math.ceil((1 + Math.sqrt(1 + 800 / str)) / 2);\n      return (6 - 0.1 * count + 0.8 / count + str / 8) / 1.75;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 0.3,\n    icon: \"*bug2\",\n    incompatible: [\"rampage\", \"weakness\"],\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are taking \" +\n        prettify(this.getMult(str, stacks) * 100) +\n        \"% damage after each attack.\"\n      );\n    },\n  },\n  weakness: {\n    description: function (str) {\n      return (\n        \"Enemies stack a debuff with each attack, reducing Trimp attack by \" +\n        prettify(100 - this.getMult(str, 1) * 100) +\n        \"% per stack. Stacks cap at 9 and reset on Trimp death.\"\n      );\n    },\n    getMult: function (str, stacks) {\n      return 1 - 0.01 * str * stacks;\n    },\n    getWeight: function (str) {\n      return str / 4;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 0.6,\n    icon: \"fire\",\n    incompatible: [\"bogged\", \"plague\"],\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps have \" +\n        prettify(100 - this.getMult(str, stacks) * 100) +\n        \"% less attack.\"\n      );\n    },\n  },\n  large: {\n    description: function (str) {\n      return (\n        \"All housing can store \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% fewer Trimps\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - 0.01 * str;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) * 2;\n    },\n    minMaxStep: [10, 60, 1],\n    chance: 1,\n  },\n  dedication: {\n    description: function (str) {\n      return (\n        \"Gain \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"% more resources from gathering\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.1 * str;\n    },\n    getWeight: function (str) {\n      return 0.075 * str * -1;\n    },\n    incompatible: [\"famine\"],\n    minMaxStep: [5, 40, 1],\n    chance: 0.75,\n  },\n  famine: {\n    description: function (str) {\n      return (\n        \"Gain \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% less Metal, Food, Wood, and Gems from all sources\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - 0.01 * str;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) / 2;\n    },\n    incompatible: [\"dedication\"],\n    minMaxStep: [40, 80, 1],\n    chance: 2,\n  },\n  badStrength: {\n    description: function (str) {\n      return (\n        \"Enemy attack increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.2 * str;\n    },\n    getWeight: function (str) {\n      return 0.1 * str;\n    },\n    minMaxStep: [5, 15, 1],\n    chance: 1,\n  },\n  badHealth: {\n    description: function (str) {\n      return (\n        \"Enemy health increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.2 * str;\n    },\n    getWeight: function (str) {\n      return 0.2 * str;\n    },\n    minMaxStep: [3, 15, 1],\n    chance: 1,\n  },\n  badMapStrength: {\n    description: function (str) {\n      return (\n        \"Enemy attack in maps increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.3 * str;\n    },\n    getWeight: function (str) {\n      return 0.1 * (1 + 1 / 3) * str;\n    },\n    minMaxStep: [3, 15, 1],\n    chance: 1,\n  },\n  badMapHealth: {\n    description: function (str) {\n      return (\n        \"Enemy health in maps increased by \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"%.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.3 * str;\n    },\n    getWeight: function (str) {\n      return 0.3 * str * (5 / 8);\n    },\n    minMaxStep: [3, 10, 1],\n    chance: 1,\n  },\n  crits: {\n    description: function (str) {\n      return (\n        \"Enemies have a 25% chance to crit for \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of normal damage.\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + 0.5 * str;\n    },\n    getWeight: function (str) {\n      return 0.15 * this.getMult(str);\n    },\n    minMaxStep: [1, 24, 1],\n    chance: 0.75,\n  },\n  trimpCritChanceUp: {\n    description: function (str) {\n      return (\n        \"Your Trimps have +\" +\n        prettify(this.getMult(str) * 100) +\n        \"% Crit Chance.\"\n      );\n    },\n    getMult: function (str) {\n      return str / 10;\n    },\n    getWeight: function (str) {\n      return 0.25 * str * -1;\n    },\n    minMaxStep: [5, 10, 1],\n    incompatible: [\"trimpCritChanceDown\"],\n    chance: 1.25,\n  },\n  trimpCritChanceDown: {\n    description: function (str) {\n      return (\n        \"Your Trimps have -\" +\n        prettify(this.getMult(str) * 100) +\n        \"% Crit Chance.\"\n      );\n    },\n    getMult: function (str) {\n      return str / 10;\n    },\n    getWeight: function (str) {\n      return str / 4.5;\n    },\n    minMaxStep: [2, 7, 1],\n    incompatible: [\"trimpCritChanceUp\"],\n    chance: 0.75,\n  },\n  bogged: {\n    description: function (str) {\n      return (\n        \"Your Trimps lose \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of their max health after each attack.\"\n      );\n    },\n    getMult: function (str) {\n      return 0.01 * str;\n    },\n    getWeight: function (str) {\n      var count = Math.ceil(1 / this.getMult(str));\n      return (\n        (6 -\n          (0.2 * (count > 60 ? 60 : count)) / 2 +\n          ((500 * count + 400) / count / 500 - 1)) /\n        1.5\n      );\n    },\n    incompatible: [\"rampage\", \"weakness\"],\n    minMaxStep: [1, 5, 1],\n    chance: 0.3,\n  },\n  dysfunctional: {\n    description: function (str) {\n      return (\n        \"Your Trimps breed \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% slower\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - str * 0.05;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) / 6;\n    },\n    minMaxStep: [10, 18, 1],\n    chance: 1,\n  },\n  oddTrimpNerf: {\n    description: function (str) {\n      return (\n        \"Trimps have \" +\n        prettify(100 - this.getMult(str) * 100) +\n        \"% less attack on odd numbered Zones\"\n      );\n    },\n    getMult: function (str) {\n      return 1 - str * 0.02;\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str) - 1) / 1.5;\n    },\n    minMaxStep: [15, 40, 1],\n    chance: 1,\n  },\n  evenTrimpBuff: {\n    description: function (str) {\n      return (\n        \"Trimps have \" +\n        prettify(this.getMult(str) * 100 - 100) +\n        \"% more attack on even numbered Zones\"\n      );\n    },\n    getMult: function (str) {\n      return 1 + str * 0.2;\n    },\n    getWeight: function (str) {\n      return (this.getMult(str) - 1) * -1;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  karma: {\n    description: function (str) {\n      return (\n        \"Gain a stack after killing an enemy, increasing all non \" +\n        heliumOrRadon(false, true) +\n        \" loot by \" +\n        prettify(this.getMult(str, 1) * 100 - 100) +\n        \"%. Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \", and reset after clearing a Zone.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are finding \" +\n        prettify(this.getMult(str, stacks) * 100 - 100) +\n        \"% more loot!\"\n      );\n    },\n    getMaxStacks: function (str) {\n      return Math.floor((str % 9) * 25) + 300;\n    },\n    getMult: function (str, stacks) {\n      var realStrength = Math.ceil(str / 9);\n      return 1 + 0.0015 * realStrength * stacks;\n    },\n    getWeight: function (str) {\n      return (this.getMult(str, this.getMaxStacks(str)) - 1) / -2;\n    },\n    icon: \"*arrow-up\",\n    minMaxStep: [1, 45, 1],\n    chance: 1,\n  },\n  toxic: {\n    description: function (str) {\n      return (\n        \"Gain a stack after killing an enemy, reducing breed speed by \" +\n        prettify(100 - this.getMult(str, 1) * 100) +\n        \"% (compounding). Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \", and reset after clearing a Zone.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are breeding \" +\n        prettify(100 - this.getMult(str, stacks) * 100) +\n        \"% slower.\"\n      );\n    },\n    getMaxStacks: function (str) {\n      return Math.floor((str % 9) * 25) + 300;\n    },\n    getMult: function (str, stacks) {\n      var realStrength = Math.ceil(str / 9);\n      return Math.pow(1 - 0.001 * realStrength, stacks);\n    },\n    getWeight: function (str) {\n      return (1 / this.getMult(str, this.getMaxStacks(str)) - 1) / 6;\n    },\n    icon: \"*radioactive\",\n    minMaxStep: [1, 45, 1],\n    chance: 1,\n  },\n  bloodthirst: {\n    description: function (str) {\n      return (\n        \"Enemies gain a stack of Bloodthirst whenever Trimps die. Every \" +\n        this.getFreq(str) +\n        \" stacks, enemies will heal to full and gain an additive 50% attack. Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \" and reset after killing an enemy.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      var freq = this.getFreq(str);\n      var max = this.getMaxStacks(str);\n      var text = \"This Bad Guy\";\n      if (stacks < max) {\n        var next = freq - (stacks % freq);\n        text +=\n          \" will heal to full and gain attack in \" +\n          next +\n          \" stack\" +\n          (next === 1 ? \"\" : \"s\") +\n          \", \" +\n          (stacks >= freq ? \"\" : \" and\") +\n          \" gains 1 stack whenever Trimps die\";\n      }\n      if (stacks >= freq) {\n        if (stacks < max) text += \", and\";\n        text +=\n          \" currently has \" +\n          prettify(this.getMult(str, stacks) * 100 - 100) +\n          \"% more attack\";\n      }\n      text += \".\";\n      return text;\n    },\n    getMaxStacks: function (str) {\n      return this.getFreq(str) * (2 + Math.floor(str / 2));\n    },\n    getFreq: function (str) {\n      return 10 - str;\n    },\n    getMult: function (str, stacks) {\n      var count = Math.floor(stacks / this.getFreq(str));\n      return 1 + 0.5 * count;\n    },\n    getWeight: function (str) {\n      return 0.5 + 0.25 * Math.floor(str / 2);\n    },\n    minMaxStep: [1, 7, 1],\n    chance: 1,\n    icon: \"*flask\",\n    iconOnEnemy: true,\n  },\n  explosive: {\n    description: function (str) {\n      var text =\n        \"Enemies instantly deal \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of their attack damage when killed\";\n      if (str > 15) {\n        text += \" unless your block is as high as your maximum health\";\n      }\n      text += \".\";\n      return text;\n    },\n    getMult: function (str) {\n      return str;\n    },\n    getWeight: function (str) {\n      var mult = this.getMult(str);\n      if (str <= 15) {\n        return (3 / 20) * mult + 1 / 4;\n      } else {\n        return (1 / 14) * mult - 1 / 7;\n      }\n    },\n    get minMaxStep() {\n      if (window.daily_universe === 1) return [5, 30, 1];\n      return [5, 10, 1];\n    },\n    chance: 1,\n  },\n  slippery: {\n    description: function (str) {\n      return (\n        \"Enemies have a \" +\n        prettify(this.getMult(str) * 100) +\n        \"% chance to dodge your attacks on \" +\n        (str <= 15 ? \"odd\" : \"even\") +\n        \" Zones.\"\n      );\n    },\n    getMult: function (str) {\n      if (str > 15) str -= 15;\n      return 0.02 * str;\n    },\n    getWeight: function (str) {\n      return ((1 / (1 - this.getMult(str)) - 1) * 10) / 1.5;\n    },\n    minMaxStep: [1, 30, 1],\n    chance: 1,\n  },\n  rampage: {\n    description: function (str) {\n      return (\n        \"Gain a stack after killing an enemy, increasing Trimp attack by \" +\n        prettify(this.getMult(str, 1) * 100 - 100) +\n        \"% (additive). Stacks cap at \" +\n        this.getMaxStacks(str) +\n        \", and reset when your Trimps die.\"\n      );\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are dealing \" +\n        prettify(this.getMult(str, stacks) * 100 - 100) +\n        \"% more damage.\"\n      );\n    },\n    getMaxStacks: function (str) {\n      return Math.floor(((str % 10) + 1) * 10);\n    },\n    getMult: function (str, stacks) {\n      var realStrength = Math.ceil(str / 10);\n      return 1 + 0.01 * realStrength * stacks;\n    },\n    getWeight: function (str) {\n      return (1 - this.getMult(str, 1)) * this.getMaxStacks(str);\n    },\n    icon: \"*fire\",\n    incompatible: [\"plague\", \"bogged\"],\n    minMaxStep: [1, 40, 1],\n    chance: 1,\n  },\n  mutimps: {\n    description: function (str) {\n      var size = str % 5;\n      if (size === 0) size = \"\";\n      else size = \"the first \" + prettify(size * 2) + \" rows of\";\n\n      var name = str < 4 ? \"Mutimps\" : \"Hulking Mutimps\";\n      return (\n        \"40% of Bad Guys in \" +\n        size +\n        \" the World will be mutated into \" +\n        name +\n        \".\"\n      );\n    },\n    getWeight: function (str) {\n      return (str / 10) * 1.5;\n    },\n    getMaxCellNum: function (str) {\n      if (str > 5) str -= 5;\n      str--;\n      var values = [19, 39, 59, 79, 99];\n      return values[str];\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  empower: {\n    description: function (str) {\n      var s = str === 1 ? \"\" : \"s\";\n      return (\n        \"All enemies gain \" +\n        str +\n        \" stack\" +\n        s +\n        \" of Empower whenever your Trimps die in the World. Empower increases the attack and health of Bad Guys in the World by 0.2% per stack, can stack to 9999, and never resets.\"\n      );\n    },\n    getWeight: function (str) {\n      return (str / 6) * 2;\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"This Bad Guy is Empowered and has \" +\n        prettify(this.getMult(str, stacks) * 100 - 100) +\n        \"% more health and attack.\"\n      );\n    },\n    stacksToAdd: function (str) {\n      return str;\n    },\n    getMult: function (str, stacks) {\n      return 1 + 0.002 * stacks;\n    },\n    getMaxStacks: function (str) {\n      return 9999;\n    },\n    worldStacksOnly: true,\n    iconOnEnemy: true,\n    icon: \"baby-formula\",\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  pressure: {\n    description: function (str) {\n      return (\n        \"Trimps gain a stack of Pressure every \" +\n        Math.round(this.timePerStack(str)) +\n        \" seconds. Each stack of pressure reduces Trimp health by 1%. Max of \" +\n        Math.round(this.getMaxStacks(str)) +\n        \" stacks, stacks reset after clearing a Zone.\"\n      );\n    },\n    getWeight: function (str) {\n      var time = 105 - this.timePerStack(str);\n      var stacks = this.getMaxStacks(str);\n      return (time * 1.3 + stacks) / 200;\n    },\n    getMult: function (str, stacks) {\n      return Math.pow(0.99, stacks);\n    },\n    timePerStack: function (str) {\n      var thisStr = Math.ceil(str / 4) - 1;\n      return 45 + thisStr * 5;\n    },\n    stackDesc: function (str, stacks) {\n      return (\n        \"Your Trimps are under a lot of pressure. Maximum health is reduced by \" +\n        prettify((1 - this.getMult(str, stacks)) * 100) +\n        \"%.\"\n      );\n    },\n    getMaxStacks: function (str) {\n      var thisStr = Math.floor(str % 4);\n      return 45 + thisStr * 5;\n    },\n    icon: \"*heart3\",\n    minMaxStep: [1, 16, 1],\n    chance: 1,\n  },\n  mirrored: {\n    description: function (str) {\n      var reflectChance = this.getReflectChance(str);\n      return (\n        \"Enemies have a\" +\n        (reflectChance.toString()[0] === \"8\" ? \"n\" : \"\") +\n        \" \" +\n        prettify(reflectChance) +\n        \"% chance to reflect an attack, dealing \" +\n        prettify(this.getMult(str) * 100) +\n        \"% of damage taken back to your Trimps.\"\n      );\n    },\n    getReflectChance: function (str) {\n      return Math.ceil(str / 10) * 10;\n    },\n    getMult: function (str) {\n      return ((str % 10) + 1) / 10;\n    },\n    getWeight: function (str) {\n      return (\n        ((this.getReflectChance(str) + 90) / 100) *\n        0.85 *\n        ((this.getMult(str) + 0.9) * 0.85)\n      );\n    },\n    testWeights: function () {\n      var min = 0;\n      var max = 0;\n      var results = [];\n      for (\n        var x = this.minMaxStep[0];\n        x <= this.minMaxStep[1];\n        x += this.minMaxStep[2]\n      ) {\n        var result = this.getWeight(x);\n        if (min === 0) min = result;\n        else if (result < min) min = result;\n        if (result > max) max = result;\n        results.push(result);\n      }\n      return \"Min: \" + min + \", Max: \" + max;\n    },\n    reflectDamage: function (str, attack) {\n      if (Math.floor(Math.random() * 100) >= this.getReflectChance(str))\n        return 0;\n      return this.getMult(str) * attack;\n    },\n    minMaxStep: [1, 100, 1],\n    chance: 1,\n  },\n  metallicThumb: {\n    description: function (str) {\n      return (\n        \"Equipment is \" + prettify((1 - this.getMult(str)) * 100) + \"% cheaper.\"\n      );\n    },\n    getWeight: function (str) {\n      return (str + 3) / 26;\n    },\n    getMult: function (str) {\n      return 1 - (str / 100) * 5;\n    },\n    minMaxStep: [1, 10, 1],\n    chance: 1,\n  },\n  hemmorrhage: {\n    description: function (str) {\n      var res = this.getResources(str);\n      var text = \"Every 15 seconds, your stored \";\n      for (var x = 1; x < res.length; x++) {\n        if (x === 2) {\n          if (res.length === 3) text += \" and \";\n          else text += \", \";\n        } else if (x === 3) {\n          text += \", and \";\n        }\n        text += res[x].charAt(0).toUpperCase() + res[x].slice(1);\n      }\n      text += \" is reduced by \" + prettify(res[0]) + \"%\";\n      return text;\n    },\n    getResources: function (str) {\n      str = str + \"\";\n      var strength = str.length >= 4 ? parseInt(str[3], 0) : 0;\n      strength = 25 + strength * 5;\n      var res = [strength];\n      if (parseInt(str[0], 10) < 7) res.push(\"food\");\n      if (str.length < 2) {\n        if (res.length < 2) res.push(\"food\");\n        return res;\n      }\n      if (parseInt(str[1], 10) < 7) res.push(\"wood\");\n      if (str.length < 3) {\n        if (res.length < 2) res.push(\"wood\");\n        return res;\n      }\n      if (parseInt(str[2], 10) < 7) res.push(\"metal\");\n      if (res.length < 2) res.push(\"metal\");\n      return res;\n    },\n    getWeight: function (str) {\n      var res = this.getResources(str);\n      var base = 0.3 * res.length * (1 + res[0] / 50);\n      return base;\n    },\n    blockU1: true,\n    minMaxStep: [0, 9999, 1],\n    chance: 2,\n  },\n  /* \t\tdisarmed: {\n\t\t\tequipmentList: [\"Boots\", \"Mace\", \"Helmet\", \"Polearm\", \"Pants\", \"Battleaxe\", \"Shoulderguards\", \"Greatsword\", \"Breastplate\", \"Arbalest\", \"Gambeson\"],\n\t\t\tdescription: function (str) {\n\t\t\t\treturn \"You can't use something\"\n\t\t\t},\n\t\t\tgetBannedEquipment(str, checkOne){\n\t\t\t\tif (checkOne) return (this.equipmentList.indexOf(checkOne) < str);\n\t\t\t},\n\t\t\tminMaxStep: [1, 11, 1],\n\t\t\tchance: 1\n\t\t} */\n};\n\nexport function prettify(number) {\n  var numberTmp = number;\n  // if (!isFinite(number)) return \"<span class='icomoon icon-infinity'></span>\";\n  if (number >= 1000 && number < 10000) return Math.floor(number);\n  if (number === 0) return prettifySub(0);\n  if (number < 0) return \"-\" + prettify(-number);\n  if (number < 0.005) return (+number).toExponential(2);\n\n  var base = Math.floor(Math.log(number) / Math.log(1000));\n  if (base <= 0) return prettifySub(number);\n\n  if (game.options.menu.standardNotation.enabled === 5) {\n    //Thanks ZXV\n    var logBase = game.global.logNotBase;\n    var exponent = Math.log(number) / Math.log(logBase);\n    return prettifySub(exponent) + \"L\" + logBase;\n  }\n\n  number /= Math.pow(1000, base);\n  if (number >= 999.5) {\n    // 999.5 rounds to 1000 and we don’t want to show “1000K” or such\n    number /= 1000;\n    ++base;\n  }\n  if (game.options.menu.standardNotation.enabled === 3) {\n    var suffices = [\n      \"a\",\n      \"b\",\n      \"c\",\n      \"d\",\n      \"e\",\n      \"f\",\n      \"g\",\n      \"h\",\n      \"i\",\n      \"j\",\n      \"k\",\n      \"l\",\n      \"m\",\n      \"n\",\n      \"o\",\n      \"p\",\n      \"q\",\n      \"r\",\n      \"s\",\n      \"t\",\n      \"u\",\n      \"v\",\n      \"w\",\n      \"x\",\n      \"y\",\n      \"z\",\n    ];\n    if (base <= suffices.length) var suffix = suffices[base - 1];\n    else {\n      var suf2 = (base % suffices.length) - 1;\n      if (suf2 < 0) suf2 = suffices.length - 1;\n      suffix = suffices[Math.ceil(base / suffices.length) - 2] + suffices[suf2];\n    }\n  } else {\n    suffices = [\n      \"K\",\n      \"M\",\n      \"B\",\n      \"T\",\n      \"Qa\",\n      \"Qi\",\n      \"Sx\",\n      \"Sp\",\n      \"Oc\",\n      \"No\",\n      \"Dc\",\n      \"Ud\",\n      \"Dd\",\n      \"Td\",\n      \"Qad\",\n      \"Qid\",\n      \"Sxd\",\n      \"Spd\",\n      \"Od\",\n      \"Nd\",\n      \"V\",\n      \"Uv\",\n      \"Dv\",\n      \"Tv\",\n      \"Qav\",\n      \"Qiv\",\n      \"Sxv\",\n      \"Spv\",\n      \"Ov\",\n      \"Nv\",\n      \"Tg\",\n      \"Utg\",\n      \"Dtg\",\n      \"Ttg\",\n      \"Qatg\",\n      \"Qitg\",\n      \"Sxtg\",\n      \"Sptg\",\n      \"Otg\",\n      \"Ntg\",\n      \"Qaa\",\n      \"Uqa\",\n      \"Dqa\",\n      \"Tqa\",\n      \"Qaqa\",\n      \"Qiqa\",\n      \"Sxqa\",\n      \"Spqa\",\n      \"Oqa\",\n      \"Nqa\",\n      \"Qia\",\n      \"Uqi\",\n      \"Dqi\",\n      \"Tqi\",\n      \"Qaqi\",\n      \"Qiqi\",\n      \"Sxqi\",\n      \"Spqi\",\n      \"Oqi\",\n      \"Nqi\",\n      \"Sxa\",\n      \"Usx\",\n      \"Dsx\",\n      \"Tsx\",\n      \"Qasx\",\n      \"Qisx\",\n      \"Sxsx\",\n      \"Spsx\",\n      \"Osx\",\n      \"Nsx\",\n      \"Spa\",\n      \"Usp\",\n      \"Dsp\",\n      \"Tsp\",\n      \"Qasp\",\n      \"Qisp\",\n      \"Sxsp\",\n      \"Spsp\",\n      \"Osp\",\n      \"Nsp\",\n      \"Og\",\n      \"Uog\",\n      \"Dog\",\n      \"Tog\",\n      \"Qaog\",\n      \"Qiog\",\n      \"Sxog\",\n      \"Spog\",\n      \"Oog\",\n      \"Nog\",\n      \"Na\",\n      \"Un\",\n      \"Dn\",\n      \"Tn\",\n      \"Qan\",\n      \"Qin\",\n      \"Sxn\",\n      \"Spn\",\n      \"On\",\n      \"Nn\",\n      \"Ct\",\n      \"Uc\",\n    ];\n    if (\n      game.options.menu.standardNotation.enabled === 2 ||\n      (game.options.menu.standardNotation.enabled === 1 &&\n        base > suffices.length) ||\n      (game.options.menu.standardNotation.enabled === 4 && base > 31)\n    )\n      suffix = \"e\" + base * 3;\n    else if (\n      game.options.menu.standardNotation.enabled &&\n      base <= suffices.length\n    )\n      suffix = suffices[base - 1];\n    else {\n      exponent = parseFloat(numberTmp).toExponential(2);\n      exponent = exponent.replace(\"+\", \"\");\n      return exponent;\n    }\n  }\n  return prettifySub(number) + suffix;\n}\n\nfunction prettifySub(number) {\n  number = parseFloat(number);\n  var floor = Math.floor(number);\n  if (number === floor)\n    // number is an integer, just show it as-is\n    return number;\n  // var precision = 3 - floor.toString().length; // use the right number of digits\n\n  return number.toFixed(3 - floor.toString().length);\n}\nfunction heliumOrRadon() {\n  return window.daily_universe === 1 ? \"Helium\" : \"Radon\";\n}\n\nvar game = {\n  options: {\n    menu: {\n      standardNotation: {\n        enabled: 4,\n      },\n    },\n  },\n};\n\nvar rewards = [\n  \"stickler\",\n  \"helium\",\n  \"liquid\",\n  \"purifier\",\n  \"lucky\",\n  \"void\",\n  \"helium\",\n  \"liquid\",\n  \"eliminator\",\n  \"overkiller\",\n];\nvar prestigeRewards = [\n  \"dailies\",\n  \"voidance\",\n  \"overkiller\",\n  \"critChance\",\n  \"megaCrit\",\n  \"superVoid\",\n  \"voidelicious\",\n  \"naturesWrath\",\n  \"voidSiphon\",\n  \"plaguebrought\",\n];\nvar rewardsU2 = [\n  \"trapper\",\n  \"prism\",\n  \"heirloopy\",\n  \"radortle\",\n  \"healthy\",\n  \"wealthy\",\n  \"critChance\",\n  \"gatherer\",\n  \"dailies\",\n  \"exotic\",\n  \"shieldlayer\",\n  \"tenacity\",\n  \"megaCrit\",\n  \"critChance\",\n  \"smithy\",\n  \"biggerbetterheirlooms\",\n];\n\n// Heirloopy\n// universe === 2 => level === 3 or 2 (depending on talent)\n\n// Dailies\n// universe === 2 => level === 9 or 8 (depending on talent);\n// universe === 1 => 11 - prestige - (?1) >= 0\n\nexport function isRewardActive(\n  reward,\n  universe,\n  evolution,\n  level,\n  boughtEarly\n) {\n  let minus = boughtEarly ? 1 : 0;\n  switch (reward) {\n    case \"dailies\":\n      if (universe === 1) {\n        if (11 - evolution - minus - level <= 0) {\n          return true;\n        }\n      } else {\n        if (level >= 9 - minus) {\n          return true;\n        }\n      }\n      break;\n    case \"heirloopy\":\n      if (universe === 2) {\n        if (level >= 3 - minus) {\n          return true;\n        }\n      }\n      break;\n    default:\n  }\n  return false;\n}\n\nexport function getDailyHeliumValue(weight, active) {\n  var value = 75 * weight + 20;\n  if (value < 100) value = 100;\n  else if (value > 500) value = 500;\n  if (active) value += 100;\n  return value;\n}\n","import clsx from \"clsx\";\nimport React, { useState } from \"react\";\nimport { DailyType } from \"../../calculators/daily\";\nimport { dailyModifiers } from \"../../calculators/main\";\n\nexport const WeekBox = function WeekBox({ text }: { text: string }) {\n  return (\n    <div\n      className={clsx(\n        baseBox,\n        \"flex items-center justify-center text-xxs select-none sm:text-xs md:text-base\"\n      )}\n    >\n      {text}\n    </div>\n  );\n};\n\nconst baseBox = \"w-11 h-11 sm:h-16 sm:w-16 md:w-24 md:h-24\";\n\ninterface Props {\n  object: DailyType;\n}\n\nfunction Box({ object }: Props) {\n  const [expanded, setExpanded] = useState(false);\n\n  const { value, date, next, preview, tier, seed, mods } = object;\n\n  if (value === undefined) return <div className={baseBox}></div>;\n\n  return (\n    <>\n      <div\n        className={clsx(\n          `bg-tier${tier}`,\n          baseBox,\n          \"relative flex flex-col items-center justify-center text-black rounded shadow cursor-pointer select-none\"\n        )}\n        onClick={() => setExpanded(!expanded)}\n        id={String(seed)}\n      >\n        <div className=\"absolute top-0 text-xxxxs sm:text-xxs md:text-xs\">\n          {date}\n        </div>\n        <div className=\"text-xxs sm:text-base md:text-xl\">{`${value.toFixed(\n          1\n        )}%`}</div>\n        <div className=\"absolute bottom-0 text-xxxs md:text-xs\">\n          {preview.join(\"\")}\n          {next && (\n            <span role=\"img\" title=\"This is the next daily\">\n              ⭐\n            </span>\n          )}\n        </div>\n      </div>\n\n      {expanded && (\n        <span className=\"col-span-7 justify-self-center p-2 w-de bg-secondary border border-solid border-prpl rounded sm:w-deSM md:w-deMD\">\n          <p className=\"whitespace-pre-wrap text-xxxs sm:text-xs md:text-base\">\n            {date + \"\\n\"}\n            {Object.keys(mods).map((x, i) => {\n              return (\n                \" → \" + dailyModifiers[x].description(mods[x].strength) + \"\\n\"\n              );\n            })}\n            {\"Bonus is \" + value.toFixed(1) + \"%\"}\n          </p>\n        </span>\n      )}\n    </>\n  );\n}\n\nexport default Box;\n","import { dailyModifiers } from \"./main\";\n\nvar mods = {\n  empower: \"E\",\n  explosive: \"e\",\n  toxic: \"T\",\n  pressure: \"P\",\n  plague: \"p\",\n  bogged: \"B\",\n  trimpCritChanceUp: \"+\",\n  trimpCritChanceDown: \"-\",\n  weakness: \"W\",\n  minDamage: \"m\",\n  maxDamage: \"M\",\n  badHealth: \"H\",\n  rampage: \"D\",\n  karma: \"K\",\n  hemmorrhage: \"h\",\n};\n\ndeclare const window: any;\nwindow.daily_universe = 1;\n\nexport type DailyType = {\n  value?: number;\n  date?: string;\n  next?: boolean;\n  mods?: Partial<DailyMods>;\n  preview?: string[];\n  tier?: 1 | 2 | 3;\n  seed?: number;\n};\n\nexport function makeDaily(times): Partial<DailyType>[] {\n  let returnable: DailyType[] = [];\n  var todayOfWeek: number = getDailyTimeString(0, true);\n  for (var z = 0; z < 8; z++) {\n    var dayIndex = todayOfWeek * -1 + z;\n    if (dayIndex > -1) {\n      dayIndex = z - todayOfWeek - 7;\n    }\n  }\n  var lastWeek = dayIndex - 7;\n  var blank = lastWeek - dayIndex + 1;\n  if (lastWeek === -13) {\n    lastWeek = -6;\n    blank = -7;\n  }\n\n  for (var x = lastWeek; x < times; x++) {\n    let dailyObj = getDailyChallenge(x);\n    let seed = dailyObj.seed;\n    delete dailyObj[\"seed\"];\n    let dailyValue = getDailyHeliumValueDaily(countDailyWeightDaily(dailyObj));\n    if (x < blank) {\n      returnable.push({});\n      continue;\n    }\n    // console.log(dailyObj);\n    returnable.push({\n      value: dailyValue,\n      date: getPrettyTimeString(x),\n      next: x === 1 ? true : false,\n      mods: dailyObj,\n      preview: Object.keys(dailyObj).reduce((prev, curr) => {\n        if (curr === \"seed\") return prev;\n        if (mods.hasOwnProperty(curr)) {\n          prev.push(mods[curr]);\n        }\n        return prev;\n      }, []),\n      tier: findColor(dailyValue),\n      seed: seed,\n    });\n    // console.log(returnable);\n  }\n  return returnable;\n}\n\nvar tiers = [225, 335, 425];\n\nfunction findColor(value) {\n  if (value <= tiers[0]) {\n    return 1;\n  } else if (value <= tiers[1] && value > tiers[0]) {\n    return 2;\n  } else if (value > tiers[1]) {\n    return 3;\n  }\n}\n\nfunction getDailyTimeString(add: number, getDayOfWeek?: boolean): number {\n  var today = new Date();\n  if (!add) add = 0;\n  today.setUTCDate(today.getUTCDate() + add);\n  if (getDayOfWeek) return today.getUTCDay();\n  var year = today.getUTCFullYear();\n  var month: string | number = today.getUTCMonth() + 1; //For some reason January is month 0? Why u do dis?\n  if (month < 10) month = \"0\" + month;\n  var day: string | number = today.getUTCDate();\n  if (day < 10) day = \"0\" + day;\n  var seedStr: string | number = String(year) + String(month) + String(day);\n  seedStr = parseInt(seedStr);\n  return seedStr;\n}\n\nfunction getPrettyTimeString(add: number): string {\n  var today = new Date();\n  if (!add) add = 0;\n  today.setUTCDate(today.getUTCDate() + add);\n  var year = today.getUTCFullYear();\n  var month: number | string = today.getUTCMonth() + 1; //For some reason January is month 0? Why u do dis?\n  if (month < 10) month = \"0\" + month;\n  var day: number | string = today.getUTCDate();\n  if (day < 10) day = \"0\" + day;\n  return year + \"-\" + month + \"-\" + day;\n}\n\nfunction getRandomIntSeeded(seed: number, minIncl: number, maxExcl: number) {\n  var toReturn = Math.floor(seededRandom(seed) * (maxExcl - minIncl)) + minIncl;\n  return toReturn === maxExcl ? minIncl : toReturn;\n}\n\nfunction seededRandom(seed: number) {\n  var x = Math.sin(seed++) * 10000;\n  return parseFloat((x - Math.floor(x)).toFixed(7));\n}\n\nfunction everythingInArrayGreaterEqual(smaller, bigger) {\n  if (bigger.length < smaller.length) return false;\n  for (var x = 0; x < smaller.length; x++) {\n    if (smaller[x] > bigger[x]) return false;\n  }\n  return true;\n}\n\nexport type DailyMods = {\n  seed: number;\n  empower?: object;\n  explosive?: object;\n  toxic?: object;\n  pressure?: object;\n  plague?: object;\n  bogged?: object;\n  trimpCritChanceUp?: object;\n  trimpCritChanceDown?: object;\n  weakness?: object;\n  minDamage?: object;\n  maxDamage?: object;\n  badHealth?: object;\n  rampage?: object;\n  karma?: object;\n  hemmorrhage?: object;\n};\n\nfunction getDailyChallenge(add: number) {\n  // checkCompleteDailies();\n  var dateSeed = getDailyTimeString(add);\n  var seedStr = getRandomIntSeeded(Number(dateSeed) + 2, 1, 1e9);\n  //seedStr = getRandomIntSeeded(seedStr, 1, 1e9);\n  var weightTarget = getRandomIntSeeded(seedStr++, 25, 51) / 10;\n  //Build a list of all modifiers to choose from\n  var modifierList = [];\n  var totalChance = 0;\n  var dailyObject: Partial<DailyMods> = {};\n  for (var item in dailyModifiers) {\n    if (window.daily_universe === 1 && dailyModifiers[item].blockU1) continue;\n    modifierList.push(item);\n    totalChance += dailyModifiers[item].chance;\n  }\n  var chanceMod = 1000 / totalChance;\n  var currentWeight = 0;\n  var maxLoops = modifierList.length;\n  var sizeCount = [0, 0, 0]; // < 0.3, < 1, >= 1\n  var sizeTarget = [\n    getRandomIntSeeded(seedStr++, 0, 2),\n    getRandomIntSeeded(seedStr++, 1, 5),\n    getRandomIntSeeded(seedStr++, 2, 6),\n  ];\n  if (weightTarget < 2.75) {\n    sizeTarget[2] = 0;\n    sizeTarget[0] += 2;\n  }\n  mainLoop: for (var x = 0; x < maxLoops; x++) {\n    var maxZLoops = modifierList.length;\n    var firstChoice = [];\n    for (var z = 0; z < maxZLoops; z++) {\n      var roll = getRandomIntSeeded(seedStr++, 0, 1000);\n      var selectedIndex;\n      var checkedTotal = 0;\n      for (var y = 0; y < modifierList.length; y++) {\n        checkedTotal += dailyModifiers[modifierList[y]].chance * chanceMod;\n        if (roll < checkedTotal || y === modifierList.length - 1) {\n          totalChance -= dailyModifiers[modifierList[y]].chance;\n          chanceMod = 1000 / totalChance;\n          selectedIndex = y;\n          break;\n        }\n      }\n      var selectedMod = modifierList[selectedIndex];\n      var modObj = dailyModifiers[selectedMod];\n      var str =\n        modObj.minMaxStep[0] +\n        getRandomIntSeeded(\n          seedStr++,\n          0,\n          Math.floor(\n            (modObj.minMaxStep[1] + modObj.minMaxStep[2]) *\n              (1 / modObj.minMaxStep[2])\n          ) - modObj.minMaxStep[0]\n        ) *\n          modObj.minMaxStep[2];\n      var modWeight = modObj.getWeight(str);\n      var modSize = modWeight < 0.85 ? 0 : modWeight < 1.85 ? 1 : 2;\n      if (modWeight + currentWeight > weightTarget + 1) continue;\n      if (everythingInArrayGreaterEqual(sizeTarget, sizeCount)) {\n        //use it and stuff\n      } else if (\n        sizeCount[modSize] >= sizeTarget[modSize] &&\n        z !== maxZLoops - 1\n      ) {\n        if (!firstChoice.length)\n          firstChoice = [selectedMod, str, selectedIndex, modSize, modWeight];\n        continue;\n      } else if (z === maxZLoops - 1 && firstChoice.length) {\n        selectedMod = firstChoice[0];\n        modObj = dailyModifiers[selectedMod];\n        selectedIndex = firstChoice[2];\n        str = firstChoice[1];\n        modSize = firstChoice[3];\n        modWeight = firstChoice[4];\n      }\n      //It's been officially selected by this point\n      sizeCount[modSize]++;\n      dailyObject[modifierList[selectedIndex]] = {\n        strength: str,\n        stacks: 0,\n      };\n      currentWeight += modWeight;\n      if (\n        x > 0 &&\n        (currentWeight > weightTarget ||\n          (currentWeight >= weightTarget - 0.5 &&\n            currentWeight <= weightTarget + 0.5))\n      ) {\n        break mainLoop;\n      }\n      modifierList.splice(selectedIndex, 1);\n      if (modObj.incompatible) {\n        for (let x = 0; x < modObj.incompatible.length; x++) {\n          //jshint ignore:line\n          var incompatibleIndex = modifierList.indexOf(modObj.incompatible[x]);\n          if (incompatibleIndex >= 0) {\n            modifierList.splice(incompatibleIndex, 1);\n          }\n        }\n      }\n      break;\n    }\n  }\n  dailyObject.seed = Number(dateSeed);\n  // console.log(dailyObject);\n  return dailyObject;\n}\n\nexport function countDailyWeightDaily(daily) {\n  var weight = 0;\n  let dailyObj = daily;\n  for (var item in dailyObj) {\n    if (item === \"seed\") continue;\n    weight += dailyModifiers[item].getWeight(dailyObj[item].strength);\n  }\n  return weight;\n}\n\nexport function getDailyHeliumValueDaily(weight) {\n  var value = 75 * weight + 20;\n  if (value < 100) value = 100;\n  else if (value > 500) value = 500;\n  return value;\n}\n\nlet lastSeed;\n\nexport function maybeMakeDaily(times, force) {\n  let newestSeed = getDailyTimeString(0);\n  if (lastSeed === newestSeed && force === false) {\n    return [];\n  } else {\n    let dailies = makeDaily(times);\n    lastSeed = newestSeed;\n    return dailies;\n  }\n}\n\nmakeDaily(24);\n","import clsx from \"clsx\";\nimport React from \"react\";\n\ninterface Props {\n  onClick?: (e?: any) => void;\n  className?: string;\n  label: string;\n  variant?: \"small\";\n}\n\nfunction Button({ onClick, className, label, variant }: Props) {\n  return (\n    <input\n      type=\"button\"\n      className={clsx(\n        className,\n        variant === \"small\"\n          ? \"p-1 text-xs sm:text-base\"\n          : \" text-sm sm:text-base p-2\",\n        \"self-center bg-secondary border border-solid border-accent rounded focus:outline-none shadow cursor-pointer select-none\"\n      )}\n      onClick={onClick}\n      value={label}\n    />\n  );\n}\n\nexport default Button;\n","import clsx from \"clsx\";\nimport React from \"react\";\n\ninterface Props {\n  onChange?: (e) => void;\n  className?: string;\n  defaultValue?: string | number;\n  value?: string | number;\n  type?: string;\n  min?: number;\n  max?: number;\n  variant?: \"fluffy\";\n  disabled?: true;\n}\n\nconst Input = ({\n  onChange,\n  className,\n  defaultValue,\n  value,\n  type,\n  min,\n  max,\n  variant,\n  disabled,\n}: Props) => {\n  return (\n    <div className=\"relative mt-0.5 rounded shadow\">\n      <input\n        type={variant === \"fluffy\" ? (type ? type : \"number\") : null}\n        onChange={onChange}\n        defaultValue={defaultValue}\n        value={value}\n        min={variant === \"fluffy\" ? (min ? min : 0) : null}\n        max={max}\n        disabled={disabled ?? null}\n        className={clsx(\n          className,\n          \"block p-1 pl-2 w-full text-xs bg-secondary border border-solid border-accent rounded focus:outline-none sm:text-base\"\n        )}\n      />\n    </div>\n  );\n};\n\nexport const MemoInput = React.memo(Input);\n\nexport default Input;\n","import clsx from \"clsx\";\nimport React, { ReactElement } from \"react\";\n\ninterface Props {\n  children: React.ReactChild | React.ReactChild[];\n  className?: string;\n}\n\nexport default function Label({ children, className }: Props): ReactElement {\n  return (\n    <label className={clsx(className, \"block text-left text-xxs sm:text-xs\")}>\n      {children}\n    </label>\n  );\n}\n","import clsx from \"clsx\";\nimport React, { useContext, useState } from \"react\";\nimport Button from \"../utils/Button\";\nimport Input from \"../utils/Input\";\nimport Label from \"../utils/Label\";\nimport { DailyContext } from \"./Context\";\n\nexport var filterTypes = {\n  minDamage: true,\n  maxDamage: true,\n  plague: true,\n  weakness: true,\n  large: true,\n  dedication: true,\n  famine: true,\n  badStrength: true,\n  badHealth: true,\n  badMapStrength: true,\n  badMapHealth: true,\n  crits: true,\n  bogged: true,\n  dysfunctional: true,\n  oddTrimpNerf: true,\n  evenTrimpBuff: true,\n  karma: true,\n  toxic: true,\n  bloodthirst: true,\n  explosive: true,\n  slippery: true,\n  rampage: true,\n  mutimps: true,\n  empower: true,\n  pressure: true,\n  mirrored: true,\n  metallicThumb: true,\n  trimpCritChanceUp: true,\n  trimpCritChanceDown: true,\n  hemmorrhage: true,\n};\n\ndeclare const window: any;\n\nexport var toMatch = 2;\n\nfunction FilterBox({ type }: { type: string }) {\n  const { updateDailiesFiltered } = useContext(DailyContext);\n  const [enabled, setEnabled] = useState(filterTypes[type]);\n\n  return (\n    <>\n      <div\n        className={clsx(\n          filterTypes[type] ? \"bg-tier3\" : \"bg-tier1\",\n          \"m-0.5 p-1 w-min text-black text-xxs shadow cursor-pointer select-none sm:text-xs md:text-sm\"\n        )}\n        onClick={() => {\n          filterTypes[type] = !filterTypes[type];\n\n          updateDailiesFiltered();\n\n          setEnabled(!enabled);\n        }}\n      >\n        {type}\n      </div>\n    </>\n  );\n}\n\nfunction Filter() {\n  const [showFilter, setShowFilter] = useState(false);\n  const { updateDailiesFiltered } = useContext(DailyContext);\n\n  // Specifically for forcing component to rerender when updating filter types.\n  const [flipAll, setFlipAll] = useState(false);\n\n  return (\n    <>\n      <Button\n        className=\"my-2\"\n        onClick={() => {\n          setShowFilter(!showFilter);\n        }}\n        label=\"Filter\"\n      />\n\n      {showFilter && (\n        <div className=\"w-11/12 text-center sm:w-9/12 md:w-3/4 lg:w-5/12\">\n          <div className=\"flex flex-wrap justify-center\">\n            {Object.keys(filterTypes)\n              .filter(\n                (type) =>\n                  (type === \"hemmorrhage\" && window.daily_universe === 1) ===\n                  false\n              )\n              .map((type, idx) => {\n                return <FilterBox key={idx} type={type} />;\n              })}\n          </div>\n          <div className=\"flex justify-center mt-2\">\n            <Button\n              className=\"mr-2\"\n              onClick={() => {\n                for (var type in filterTypes) {\n                  filterTypes[type] = !filterTypes[type];\n                }\n\n                setFlipAll(!flipAll);\n\n                updateDailiesFiltered();\n              }}\n              label=\"Flip All\"\n            />\n            <Label className=\"ml-2 w-24\">\n              Match Atleast\n              <Input\n                type=\"number\"\n                onChange={(e) => {\n                  toMatch = Number(e.target.value);\n                  updateDailiesFiltered();\n                }}\n                defaultValue={toMatch}\n              />\n            </Label>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Filter;\n","import React, { createContext, useState } from \"react\";\nimport { DailyType, maybeMakeDaily } from \"../../calculators/daily\";\nimport { filterTypes, toMatch } from \"./Filter\";\n\ninterface ContextType {\n  dailies?: DailyType[];\n  updateDailies?: any;\n  updateDailiesFiltered?: any;\n  forceDailies?: any;\n}\n\nexport const DailyContext = createContext<ContextType>({});\n// const initial_dailies = maybeMakeDaily(365);\nconst DailyProvider = ({ children }) => {\n  const [dailies, setDailies] = useState(() => maybeMakeDaily(365, true));\n\n  const updateDailies = () => {\n    const updateDailies = maybeMakeDaily(365, false);\n    if (updateDailies.length === 0) {\n      return;\n    }\n    setDailies(updateDailies);\n  };\n\n  const updateDailiesFiltered = () => {\n    const goodMods = Object.keys(filterTypes).filter((x) => filterTypes[x]);\n    for (var x = 0; x < dailies.length; x++) {\n      if (Object.keys(dailies[x]).length === 0) continue;\n\n      let matched = 0;\n\n      Object.keys(dailies[x].mods).forEach((y, i) => {\n        if (goodMods.indexOf(y) !== -1) {\n          matched += 1;\n        }\n      });\n\n      if (matched >= toMatch) {\n        document.getElementById(String(dailies[x].seed)).style.visibility = \"\";\n      } else {\n        document.getElementById(String(dailies[x].seed)).style.visibility =\n          \"hidden\";\n      }\n    }\n  };\n\n  const forceDailies = () => {\n    setDailies(maybeMakeDaily(365, true));\n  };\n\n  return (\n    <DailyContext.Provider\n      value={{ dailies, updateDailies, updateDailiesFiltered, forceDailies }}\n    >\n      {children}\n    </DailyContext.Provider>\n  );\n};\n\nexport default DailyProvider;\n","import clsx from \"clsx\";\nimport React, { useContext } from \"react\";\nimport { DailyContext } from \"./Context\";\n\ndeclare const window: any;\n\nfunction UniverseSwitch() {\n  const { forceDailies } = useContext(DailyContext);\n\n  const handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    let clickedNumber = Number((e.target as HTMLDivElement).title);\n    if (window.daily_universe === clickedNumber) {\n      return;\n    } else {\n      window.daily_universe = clickedNumber;\n      forceDailies();\n    }\n  };\n\n  return (\n    <div className=\"flex mt-5 shadow-md\">\n      <div\n        className={clsx(\n          window.daily_universe === 1\n            ? \"bg-blue-500 text-white\"\n            : \"bg-secondary text-primary\",\n          \"p-2 text-xs border border-r-0 border-solid border-prpl rounded rounded-r-none cursor-pointer select-none sm:text-base\"\n        )}\n        onClick={handleClick}\n        title=\"1\"\n      >\n        Universe 1\n      </div>\n      <div\n        className={clsx(\n          window.daily_universe === 2\n            ? \"bg-pink-500 text-white\"\n            : \"bg-secondary text-primary\",\n          \"p-2 text-xs border border-l-0 border-solid border-prpl rounded rounded-l-none cursor-pointer select-none sm:text-base\"\n        )}\n        onClick={handleClick}\n        title=\"2\"\n      >\n        Universe 2\n      </div>\n    </div>\n  );\n}\n\nexport default UniverseSwitch;\n","import React, { useContext } from \"react\";\nimport Box, { WeekBox } from \"./Box\";\nimport { DailyContext } from \"./Context\";\nimport Filter from \"./Filter\";\nimport UniverseSwitch from \"./UniverseSwitch\";\n\nconst days = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nfunction Daily() {\n  const { dailies } = useContext(DailyContext);\n\n  return (\n    <div className=\"flex flex-col flex-wrap items-center\">\n      <UniverseSwitch />\n\n      <Filter />\n      <div className=\"grid gap-2 grid-cols-7 mb-4\">\n        {days.map((x, idx) => {\n          return <WeekBox key={idx} text={x} />;\n        })}\n        {dailies.map((x, idx) => {\n          return <Box object={x} key={idx} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Daily;\n","import { decompressFromBase64 } from \"lz-string\";\n// import { testSave1 } from \"../test/testSave1.js\";\nimport { countDailyWeightDaily, DailyMods } from \"./daily\";\nimport { AutoBattleData, GameObject, Portal, Traps } from \"./GameObject.d\";\nimport { getDailyHeliumValue, isRewardActive } from \"./main\";\n\nconst extend = require(\"node.extend/lib/extend\");\n// const {\n// getUniverseChange,\n// getLevel,\n// getDailyBonus,\n// getExpBonus,\n// } = require(\"./fluffy\");\n// const { getHeirloomValue } = require(\"./main\");\n\nexport function handle_paste(ev): { game: GameObject; string: string } | false {\n  var save_string = ev.clipboardData.getData(\"text/plain\").replace(/\\s/g, \"\");\n  const game = JSON.parse(decompressFromBase64(save_string)) ?? null;\n  if (game?.global === undefined) return false;\n\n  return {\n    game,\n    string: save_string,\n  };\n}\n\nconst growth = 4;\nconst baseExp = 50;\nconst prestigeExpModifier = 5;\nconst baseFirstLevel = 1000;\nconst maxEvolution = 10;\n\nexport interface displayData {\n  xpPerRun: number;\n  currentZone: number;\n  table: [number[]];\n  levelUpTable: {};\n  percentToLevel: number;\n  bonesToLevel: number;\n  XPhr: number;\n  name: string;\n}\n\nexport class fluffyInstance {\n  string: string;\n\n  name = \"init\"; // getUniverseChange\n  firstLevel = 1000;\n  level = 0; // getLevel\n\n  iceBonus = 0;\n  expBonus = 0;\n\n  exp = 0; // game.global.fluffyExp/2 // getUniverseChange\n  evolution = 0; // game.global.fluffyPrestige/2 // getUniverseChange\n\n  purchasedFluffyPrestigeBonus = false;\n  purchasedFluffyExpBonus = false;\n\n  // Edit in inputs\n  universe = 1; // getUniverseChange\n  zoneYouPortal = 0; // getUniverseChange\n  dailyBonus = 0;\n  heirloomBonus = 0;\n  graphNextIce = false;\n  spiresCompleted = [];\n  instantUpdating = false;\n  minutesPerRun = 14;\n  averageWorshippers = 0;\n\n  //\n  currentExp = 0;\n\n  traps: Traps; // game.playerSpire.traps.Knowledge\n\n  autoBattle: AutoBattleData;\n\n  daily: DailyMods; // game.global.dailyChallenge\n\n  portal: Portal;\n\n  displayData: displayData = {\n    xpPerRun: 0,\n    currentZone: 0,\n    table: [[]],\n    levelUpTable: {},\n    percentToLevel: 0,\n    bonesToLevel: 0,\n    XPhr: 0,\n    name: \"init\",\n  };\n\n  save = {\n    fluffyExp: 0,\n    fluffyExp2: 0,\n    fluffyPrestige: 0,\n    fluffyPrestige2: 0,\n    lastPortal: 0, // game.global.lastPortal\n    lastRadonPortal: 0, // game.global.lastRadonPortal\n    bestFluffyExp: 0,\n    zone: [0, 0],\n    heirloomBonus: 0,\n  };\n\n  atMaxEvo = () => {\n    if (this.universe === 2) return true;\n    if (this.evolution === maxEvolution) return true;\n    return false;\n  };\n\n  getLevel = (evolution: number, exp: number) => {\n    return Math.floor(\n      Math.log((exp / this.getFirstLevel(evolution)) * (growth - 1) + 1) /\n        Math.log(growth)\n    );\n  };\n\n  getFirstLevel = (evolution: number) => {\n    return baseFirstLevel * Math.pow(prestigeExpModifier, evolution);\n  };\n\n  removeExp = (evolution: number, level: number) => {\n    if (level === 10) return 0;\n    return Math.floor(\n      this.firstLevel *\n        Math.pow(prestigeExpModifier, evolution) *\n        ((Math.pow(growth, level) - 1) / (growth - 1))\n    );\n  };\n\n  getExpBonus = () => {\n    let num = 1;\n    if (this.universe === 1) {\n      num *= this.getExpGrowth();\n    }\n    if (this.dailyBonus > 1) {\n      num *= this.dailyBonus;\n    }\n    if (this.heirloomBonus > 1) {\n      num *= this.heirloomBonus;\n    }\n    if (this.purchasedFluffyExpBonus) {\n      num *= 0.25 * this.evolution + 1;\n    }\n    if (this.traps.owned > 0) {\n      num *= (0.15 + (this.traps.level - 1) * 0.075) * this.traps.owned + 1;\n    }\n    if (this.graphNextIce && this.iceBonus > 1) {\n      num *= this.iceBonus;\n    }\n\n    if (this.universe === 2) {\n      if (this.averageWorshippers > 0) {\n        num *= this.averageWorshippers * 0.05 * 0.375 + 1;\n      }\n\n      if (this.autoBattle.oneTimers.Battlescruff) {\n        num *= 1 + (this.autoBattle.maxEnemyLevel - 1) / 50;\n      }\n    }\n\n    return num;\n  };\n\n  getUpgradeExp = (evolution: number, level: number, expInLevel: number) => {\n    if (level === 10) {\n      return this.currentExp;\n    }\n    return Math.floor(\n      this.firstLevel *\n        Math.pow(prestigeExpModifier, evolution) *\n        ((Math.pow(growth, level + 1) - 1) / (growth - 1)) -\n        this.removeExp(evolution, level)\n    );\n  };\n\n  getMinZoneForExp = () => {\n    if (this.universe === 1) {\n      var zone = 301;\n      if (this.portal.Classy.level) zone -= this.portal.Classy.level * 3;\n      return Math.floor(zone);\n    } else {\n      return 0;\n    }\n  };\n\n  getExpGrowth = () => {\n    if (this.universe === 2) return 1.02;\n    return 1.015;\n  };\n\n  getBaseExp = () => {\n    if (this.universe === 2) return 2.5;\n    return 50;\n  };\n\n  xpFromZone = (start: number, end: number): number => {\n    const minimumZone = this.getMinZoneForExp();\n    // If ending before you're actually allowed to get xp then return nothing.\n    let mcalc1: number, mcalc2: number;\n\n    if (end < minimumZone) {\n      return 0;\n    }\n    // If starting before you're allowed to get xp, set start to min zone.\n    if (start < minimumZone) {\n      start = minimumZone;\n    }\n\n    if (this.universe === 1) {\n      mcalc1 =\n        (Math.pow(this.getExpGrowth(), end - minimumZone) - 1) /\n        (this.getExpGrowth() - 1);\n      mcalc2 =\n        (this.getBaseExp() + this.portal.Curious.level * 80) *\n        (1 + this.portal.Cunning.level * 0.25) *\n        this.expBonus;\n    } else {\n      mcalc1 =\n        (Math.pow(Math.pow(this.getExpGrowth(), 3), end) - 1) /\n        (Math.pow(this.getExpGrowth(), 3) - 1);\n      mcalc2 = this.getBaseExp() * this.expBonus;\n    }\n\n    let addSpireBonus = 0;\n\n    if (this.universe === 1 && this.spiresCompleted.length > 0) {\n      const spiresCompletedZones = this.spiresCompleted.map(\n        (spireNumber) => (spireNumber + 1) * 100\n      );\n\n      addSpireBonus = spiresCompletedZones.reduce((total, zone) => {\n        if (start < zone && end > zone) return total + this.spireXP(zone);\n\n        return total;\n      }, 0);\n    }\n\n    // Minus all of the previous zone xp.\n    if (start > minimumZone) {\n      return (\n        mcalc1 * mcalc2 + addSpireBonus - this.xpFromZone(minimumZone, start)\n      );\n    } else {\n      return mcalc1 * mcalc2 + addSpireBonus;\n    }\n  };\n\n  spireXP = (zone: number) => {\n    var reward =\n      (baseExp + this.portal.Curious.level * 80) *\n      Math.pow(this.getExpGrowth(), zone - this.getMinZoneForExp() - 1) *\n      (1 + this.portal.Cunning.level * 0.25);\n    return reward * this.expBonus * this.getExpGrowth();\n  };\n\n  getHeirloomValue = (\n    bonus: number,\n    universe: number,\n    evolution: number,\n    level: number,\n    boughtEarly: boolean\n  ) => {\n    var b = bonus / 100 + 1;\n    if (\n      universe === 2 &&\n      !isRewardActive(\"heirloopy\", universe, evolution, level, boughtEarly)\n    )\n      b = (b - 1) * 0.1 + 1;\n    if (b > 1) {\n      return b;\n    } else if (b === 1) {\n      return 1;\n    }\n  };\n\n  getTableCell = (evolution: number, level: number, prevRuns: number) => {\n    if (this.evolution === evolution && this.level > level) {\n      return 0;\n    }\n\n    const xpPerRun = this.displayData.xpPerRun;\n\n    const currentExp = this.evolution === evolution ? this.currentExp : 0;\n\n    const neededExpForLevel = this.getUpgradeExp(evolution, level, currentExp);\n\n    const runs = (neededExpForLevel - currentExp) / xpPerRun;\n    return runs + prevRuns;\n  };\n\n  getTableData = () => {\n    let evolution = this.evolution;\n\n    this.displayData.xpPerRun = Math.round(\n      this.xpFromZone(0, this.zoneYouPortal)\n    );\n\n    let data = [];\n\n    let runs = 0;\n\n    let startingLevel = this.universe === 2 ? this.level : 0;\n\n    for (let lev = startingLevel; lev < startingLevel + 10; lev++) {\n      runs = this.getTableCell(evolution, lev, runs);\n      data[lev] = [runs];\n    }\n\n    if (!this.atMaxEvo()) {\n      for (let lev = 0; lev < 10; lev++) {\n        runs = this.getTableCell(evolution + 1, lev, runs);\n        data[lev].push(runs);\n      }\n    }\n\n    return data as [number[]];\n  };\n\n  getLevelUpTable = (): Partial<{ [key: string]: number }> => {\n    let evolution = this.evolution;\n    let level = this.level;\n\n    let zone = this.universe === this.save.zone[0] ? this.save.zone[1] : 0;\n\n    let data = {};\n\n    let maxZone = this.zoneYouPortal + 100;\n    let zoneLastLeveled = zone;\n\n    // prettier-ignore\n    const currentRelativeExp = this.evolution === evolution ? this.currentExp : 0;\n    // prettier-ignore\n    let neededExpForLevel = this.getUpgradeExp(evolution, level, currentRelativeExp);\n\n    neededExpForLevel = neededExpForLevel - currentRelativeExp;\n\n    if (this.xpFromZone(zoneLastLeveled, maxZone) > neededExpForLevel) {\n      for (var z = zone; z < maxZone; z++) {\n        let collectedExp = this.xpFromZone(zoneLastLeveled, z + 1);\n        if (collectedExp >= neededExpForLevel) {\n          zoneLastLeveled = z;\n\n          if (level === 9) {\n            if (this.universe === 1 && evolution === maxEvolution) break;\n            evolution++;\n            level = 0;\n          } else {\n            level++;\n          }\n\n          let key: string;\n          if (this.universe === 2) {\n            key = \"\";\n          } else {\n            key = `E${evolution}`;\n          }\n\n          key += `L${level}`;\n\n          data = { ...data, [key]: z };\n\n          // prettier-ignore\n          neededExpForLevel = this.getUpgradeExp(evolution, level, currentRelativeExp);\n        } else {\n          continue;\n        }\n      }\n    }\n    return data;\n  };\n\n  updateUniverse = (universe: number) => {\n    this.universe = universe;\n    this.name = universe === 1 ? \"Fluffy\" : \"Scruffy\";\n\n    this.evolution =\n      universe === 1 ? this.save.fluffyPrestige : this.save.fluffyPrestige2;\n\n    this.exp = universe === 1 ? this.save.fluffyExp : this.save.fluffyExp2;\n\n    this.zoneYouPortal =\n      universe === 1 ? this.save.lastPortal : this.save.lastRadonPortal;\n\n    this.level = this.getLevel(this.evolution, this.exp);\n\n    this.currentExp = Math.ceil(\n      this.exp - this.removeExp(this.evolution, this.level)\n    );\n\n    this.heirloomBonus = getHeirloomValue(\n      this.save.heirloomBonus,\n      this.universe,\n      this.evolution,\n      this.level,\n      this.purchasedFluffyExpBonus\n    );\n\n    this.dailyBonus = getDailyBonus(\n      this.daily,\n      this.universe,\n      this.evolution,\n      this.level,\n      this.purchasedFluffyExpBonus\n    );\n  };\n\n  updateDisplayData = () => {\n    const neededExpForLevel = this.getUpgradeExp(this.evolution, this.level, 0);\n    const xpPerRun = Math.round(this.xpFromZone(0, this.zoneYouPortal));\n    const currentZone =\n      this.universe === this.save.zone[0] ? this.save.zone[1] : 0;\n\n    this.displayData = {\n      xpPerRun: xpPerRun,\n      table: this.getTableData(),\n      levelUpTable: this.getLevelUpTable(),\n      currentZone: currentZone,\n      percentToLevel: Number(\n        ((this.currentExp / neededExpForLevel) * 100).toFixed(2)\n      ),\n      bonesToLevel:\n        this.universe === 1\n          ? Math.ceil(\n              (neededExpForLevel - this.currentExp) / this.save.bestFluffyExp\n            ) * 100\n          : 0,\n      XPhr:\n        this.minutesPerRun > 0\n          ? Math.round((xpPerRun / this.minutesPerRun) * 60)\n          : 0,\n\n      name: this.name,\n    };\n  };\n\n  pasteSaveActions = (gameSave: GameObject) => {\n    this.save = {\n      fluffyExp: gameSave.global.fluffyExp,\n      fluffyExp2: gameSave.global.fluffyExp2,\n      fluffyPrestige: gameSave.global.fluffyPrestige,\n      fluffyPrestige2: gameSave.global.fluffyPrestige2,\n      lastPortal: gameSave.global.lastPortal,\n      lastRadonPortal: gameSave.global.lastRadonPortal,\n      bestFluffyExp: gameSave.stats.bestFluffyExp.valueTotal,\n      zone: [gameSave.global.universe, gameSave.global.world],\n      heirloomBonus: gameSave.heirlooms.Staff.FluffyExp.currentBonus,\n    };\n\n    this.autoBattle = gameSave.global.autoBattleData;\n\n    this.daily = extend(true, {}, gameSave.global.dailyChallenge);\n    this.portal = extend(true, {}, gameSave.portal);\n\n    this.updateUniverse(gameSave.global.universe);\n\n    this.purchasedFluffyExpBonus = gameSave.talents.fluffyExp.purchased;\n\n    this.averageWorshippers =\n      this.universe === 2 ? gameSave.jobs.Worshipper.owned : 0;\n\n    this.purchasedFluffyPrestigeBonus =\n      gameSave.talents.fluffyAbility.purchased;\n\n    this.traps = extend(true, {}, gameSave.playerSpire.traps.Knowledge);\n\n    this.graphNextIce = gameSave.global.uberNature === \"Ice\";\n\n    this.iceBonus =\n      this.universe === 1 ? 1 + 0.0025 * gameSave.empowerments.Ice.level : 1;\n\n    this.expBonus = this.getExpBonus();\n\n    this.updateDisplayData();\n  };\n\n  saveLocalStorage = () => {\n    localStorage.setItem(\n      \"fluffy-fluffy\",\n      JSON.stringify({\n        instantUpdating: this.instantUpdating,\n        minutesPerRun: this.minutesPerRun,\n        spiresCompleted: this.spiresCompleted,\n      })\n    );\n  };\n\n  getLocalStorage = () => {\n    let saveObj = JSON.parse(localStorage.getItem(\"fluffy-fluffy\"));\n\n    this.instantUpdating = saveObj?.instantUpdating ?? false;\n    this.minutesPerRun = saveObj?.minutesPerRun ?? 0;\n    this.spiresCompleted = saveObj?.spiresCompleted ?? [];\n  };\n\n  changeVar = (label: string, value: string) => {\n    switch (label) {\n      case \"Capable Level\":\n        this.portal.Capable.level = Number(value);\n        break;\n      case \"Cunning Level\":\n        this.portal.Cunning.level = Number(value);\n        break;\n      case \"Curious Level\":\n        this.portal.Curious.level = Number(value);\n        break;\n      case \"Classy Level\":\n        this.portal.Classy.level = Number(value);\n        break;\n      case \"Zone You Portal\":\n        this.zoneYouPortal = Number(value);\n        break;\n      case \"Daily Bonus\":\n        this.dailyBonus = Number(value) / 100 + 1;\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Heirloom Bonus\":\n        this.heirloomBonus = Number(value) / 100 + 1;\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"List of Spire Clears\":\n        this.spiresCompleted = value.split(\",\").map(Number);\n        this.saveLocalStorage();\n        break;\n      case \"Knowledge Towers\":\n        this.traps.owned = Number(value);\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Knowledge Level\":\n        this.traps.level = Number(value);\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Average Worshippers\":\n        this.averageWorshippers = Number(value);\n        this.expBonus = this.getExpBonus();\n        break;\n      case \"Minutes Per Run\":\n        this.minutesPerRun = Number(value);\n        this.saveLocalStorage();\n        break;\n    }\n  };\n}\n\nconst getHeirloomValue = (\n  bonus: number,\n  universe: number,\n  evolution: number,\n  level: number,\n  boughtEarly: boolean\n) => {\n  var b = bonus / 100 + 1;\n  if (\n    universe === 2 &&\n    !isRewardActive(\"heirloopy\", universe, evolution, level, boughtEarly)\n  )\n    b = (b - 1) * 0.1 + 1;\n  if (b > 1) {\n    return b;\n  } else if (b === 1) {\n    return 1;\n  }\n};\n\nconst getDailyBonus = (\n  daily: DailyMods,\n  universe: number,\n  evolution: number,\n  level: number,\n  boughtEarly: boolean\n) => {\n  if (daily.seed) {\n    return (\n      getDailyHeliumValue(\n        countDailyWeightDaily(daily),\n        isRewardActive(\"dailies\", universe, evolution, level, boughtEarly)\n      ) /\n        100 +\n      1\n    );\n  } else {\n    return 1;\n  }\n};\n","import React, { createContext, useState } from \"react\";\nimport { fluffyInstance } from \"../../calculators/fluffy\";\n\ninterface ContextType {\n  fluffyInstances?: { [index: string]: fluffyInstance };\n  anotherInstance?: () => void;\n  shown?: number[];\n}\n\nexport const FluffyContext = createContext<ContextType>({});\n// const initial_dailies = maybeMakeDaily(365);\nconst FluffyProvider = ({ children }: { children: React.ReactNode }) => {\n  const [fluffyInstances, setFluffyInstance] = useState({\n    0: new fluffyInstance(),\n  });\n\n  const [shown, setShown] = useState([0]);\n\n  const anotherInstance = () => {\n    console.log(\"Adding another Fluffy Instance. Epic\");\n    setShown((old) => [...old, old.length - 1]);\n    setFluffyInstance((old) => {\n      return { ...old, [Object.keys(old).length]: new fluffyInstance() };\n    });\n  };\n\n  return (\n    <FluffyContext.Provider\n      value={{\n        fluffyInstances,\n        anotherInstance,\n        shown,\n      }}\n    >\n      {children}\n    </FluffyContext.Provider>\n  );\n};\n\nexport default FluffyProvider;\n","import clsx from \"clsx\";\nimport React, { useState } from \"react\";\nimport { fluffyInstance } from \"../../calculators/fluffy\";\nimport Button from \"../utils/Button\";\nimport Input from \"../utils/Input\";\nimport Label from \"../utils/Label\";\n\nconst TrueFalseButton = ({\n  colors,\n  onClick,\n  active,\n}: {\n  colors: boolean;\n  onClick: () => void;\n  active: boolean;\n}) => {\n  const [isActive, setIsActive] = useState(active);\n\n  let colorClasses: string = \"\";\n\n  if (colors) {\n    if (isActive) {\n      colorClasses = \"bg-tier3 text-black\";\n    } else {\n      colorClasses = \"bg-tier1 text-black\";\n    }\n  }\n\n  return (\n    <>\n      <div\n        onClick={() => {\n          onClick();\n          setIsActive((prev) => !prev);\n        }}\n        className={clsx(\n          colors ? colorClasses : \"bg-secondary\",\n          \"p-1 pl-2 text-xs border border-solid border-accent rounded shadow cursor-pointer select-none sm:text-base\"\n        )}\n      >\n        {isActive ? \"True\" : \"False\"}\n      </div>\n    </>\n  );\n};\n\nconst MemoTrueFalseButton = React.memo(TrueFalseButton);\n\ninterface Props {\n  index: number;\n  instance: fluffyInstance;\n  universe: number;\n  renderParent: () => void;\n}\n\nfunction InputSection({ index, instance, universe, renderParent }: Props) {\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const target: HTMLInputElement = e.target;\n\n    const label = target.labels![0].innerText;\n    const value = target.value;\n\n    instance.changeVar(label, value);\n\n    if (instance.instantUpdating) {\n      instance.updateDisplayData();\n      renderParent();\n    }\n  };\n\n  const handleClick = (type: string) => {\n    if (type === \"Instant Updating\") {\n      instance.instantUpdating = !instance.instantUpdating;\n      instance.saveLocalStorage();\n    }\n\n    if (type === \"Ice\") {\n      instance.graphNextIce = !instance.graphNextIce;\n\n      if (instance.instantUpdating) {\n        instance.expBonus = instance.getExpBonus();\n        instance.updateDisplayData();\n        renderParent();\n      }\n    }\n\n    if (type === \"Fluffocus\") {\n      instance.purchasedFluffyExpBonus = !instance.purchasedFluffyExpBonus;\n\n      if (instance.instantUpdating) {\n        instance.expBonus = instance.getExpBonus();\n        instance.updateDisplayData();\n        renderParent();\n      }\n    }\n\n    if (type === \"Calculate\") {\n      instance.updateDisplayData();\n      renderParent();\n    }\n  };\n\n  return (\n    <>\n      <div\n        className=\"grid gap-4 grid-cols-2 items-end mt-4 w-full\"\n        onChange={(e) => handleInput(e as React.ChangeEvent<HTMLInputElement>)}\n        key={instance.universe}\n      >\n        {/* U1 */}\n        {/*  Set mins and max's later */}\n        {instance?.name !== \"init\" && (\n          <>\n            <hr className=\"col-span-2 m-auto w-3/4 border-accent\" />\n            {universe === 1 && (\n              <>\n                <Label>\n                  Capable Level\n                  <Input\n                    min={1}\n                    max={10}\n                    variant=\"fluffy\"\n                    defaultValue={instance?.portal?.Capable?.level || 0}\n                  />\n                </Label>\n                <Label>\n                  Cunning Level\n                  <Input\n                    variant=\"fluffy\"\n                    defaultValue={instance?.portal?.Cunning?.level || 0}\n                  />\n                </Label>\n\n                {!instance.portal.Curious.locked && (\n                  <Label>\n                    Curious Level\n                    <Input\n                      variant=\"fluffy\"\n                      defaultValue={instance?.portal?.Curious?.level || 0}\n                    />\n                  </Label>\n                )}\n\n                {!instance.portal.Classy.locked && (\n                  <Label>\n                    Classy Level\n                    <Input\n                      variant=\"fluffy\"\n                      defaultValue={instance?.portal?.Classy?.level || 0}\n                    />\n                  </Label>\n                )}\n              </>\n            )}\n            <Label>\n              Zone You Portal\n              <Input\n                min={instance.getMinZoneForExp()}\n                variant=\"fluffy\"\n                defaultValue={instance?.zoneYouPortal || 0}\n              />\n            </Label>\n            <Label>\n              Daily Bonus\n              <Input\n                variant=\"fluffy\"\n                defaultValue={Math.round(instance?.dailyBonus * 100) - 100 || 0}\n              />\n            </Label>\n            <Label>\n              Heirloom Bonus\n              <Input\n                variant=\"fluffy\"\n                defaultValue={\n                  Math.round(instance?.heirloomBonus * 100) - 100 || 0\n                }\n              />\n            </Label>\n            {universe === 1 && (\n              <Label>\n                List of Spire Clears\n                <Input defaultValue={String(instance.spiresCompleted || \"\")} />\n              </Label>\n            )}\n\n            {!instance?.traps.locked && (\n              <>\n                <Label>\n                  Knowledge Towers\n                  <Input\n                    variant=\"fluffy\"\n                    defaultValue={instance?.traps.owned || 0}\n                  />\n                </Label>\n                <Label>\n                  Knowledge Level\n                  <Input\n                    variant=\"fluffy\"\n                    defaultValue={instance?.traps.level || 0}\n                  />\n                </Label>\n              </>\n            )}\n\n            {universe === 1 && (\n              <Label>\n                Ice Enlightenment\n                <MemoTrueFalseButton\n                  colors={true}\n                  active={instance.graphNextIce}\n                  onClick={() => {\n                    handleClick(\"Ice\");\n                  }}\n                />\n              </Label>\n            )}\n\n            {universe === 1 && (\n              <Label>\n                Fluffocus Mastery\n                <MemoTrueFalseButton\n                  colors={true}\n                  active={instance.purchasedFluffyExpBonus}\n                  onClick={() => {\n                    handleClick(\"Fluffocus\");\n                  }}\n                />\n              </Label>\n            )}\n\n            {universe === 2 && (\n              <Label>\n                Average Worshippers\n                <Input\n                  variant=\"fluffy\"\n                  max={50}\n                  defaultValue={instance.averageWorshippers}\n                />\n              </Label>\n            )}\n\n            <hr className=\"col-span-2 m-auto w-3/4 border-accent\" />\n\n            <Label>\n              Minutes Per Run\n              <Input variant=\"fluffy\" defaultValue={instance.minutesPerRun} />\n            </Label>\n\n            <Label>\n              Instant Updating\n              <MemoTrueFalseButton\n                colors={true}\n                active={instance.instantUpdating}\n                onClick={() => handleClick(\"Instant Updating\")}\n              />\n            </Label>\n\n            <Button\n              className=\"col-span-2 text-center\"\n              label=\"Calculate\"\n              onClick={() => handleClick(\"Calculate\")}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(InputSection, (prevProps, nextProps) => {\n  return prevProps.universe === nextProps.universe;\n});\n","import React, { ReactElement } from \"react\";\n\ninterface Props {\n  table: {\n    [key: string]: number;\n  };\n}\n\nfunction LevelUpTable({ table }: Props): ReactElement {\n  return (\n    <>\n      <table className=\"w-max text-center bg-secondary border border-solid border-prpl shadow-xl\">\n        <thead>\n          <tr className=\"bg-thirdary\">\n            <th className=\"cell\">💉</th>\n            <th className=\"cell\">On Zone</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(table).map((key, idx) => {\n            return (\n              <tr className=\"hover:bg-thirdary\" key={idx}>\n                <td className=\"cell font-bold bg-thirdary\">{key}</td>\n                <td className=\"cell\">{table[key]}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default React.memo(LevelUpTable);\n","import React, { ReactElement } from \"react\";\n\ninterface Props {\n  data: {\n    evolution: number;\n    level: number;\n    table: [number[]];\n  };\n  second: boolean;\n  time?: number;\n}\n\nfunction sformat(s: number) {\n  if (s === 0) return 0;\n  var fm = [\n    Math.floor(s / 60 / 60 / 24), // DAYS\n    Math.floor(s / 60 / 60) % 24, // HOURS\n    Math.floor(s / 60) % 60, // MINUTES\n    Math.floor(s % 60), // SECONDS\n  ];\n  return fm\n    .map(function (v) {\n      return (v < 10 ? \"0\" : \"\") + v;\n    })\n    .join(\":\")\n    .replace(/00:/g, \"\");\n}\n\nfunction RunTimeTable({ data, second, time }: Props): ReactElement {\n  return (\n    <>\n      <div className=\"my-2 text-xl\">{`E${data.evolution}L${data.level}`}</div>\n      <table className=\"w-full bg-secondary border border-solid border-prpl shadow-xl\">\n        <thead>\n          <tr className=\"bg-thirdary\">\n            <th className=\"cell\">💉</th>\n            <th className=\"cell\">{`Runs to E${data.evolution}`}</th>\n            {time! > 0 && (\n              <th className=\"cell\">{`Time to E${data.evolution}`}</th>\n            )}\n            {second && (\n              <th className=\"cell\">{`Runs to E${data.evolution + 1}`}</th>\n            )}\n            {second && time! > 0 && (\n              <th className=\"cell\">{`Time to E${data.evolution + 1}`}</th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {data.table.map((cell, idx) => {\n            return (\n              <tr className=\"hover:bg-thirdary\" key={idx}>\n                <td className=\"cell font-bold bg-thirdary\">{`L${idx + 1}`}</td>\n                <td className=\"cell\">\n                  {cell[0] === 0 ? \"\" : cell[0].toFixed(2)}\n                </td>\n                {time! > 0 && (\n                  <td className=\"cell\">\n                    {cell[0] === 0 ? \"\" : sformat(cell[0] * time! * 60)}\n                  </td>\n                )}\n\n                {cell[1] !== undefined && (\n                  <>\n                    <td className=\"cell\">{cell[1].toFixed(2)}</td>\n                    {time! > 0 && (\n                      <td className=\"cell\">{sformat(cell[1] * time! * 60)}</td>\n                    )}\n                  </>\n                )}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default RunTimeTable;\n","import React, { ReactElement } from \"react\";\nimport { displayData } from \"../../calculators/fluffy\";\nimport { MemoInput as Input } from \"../utils/Input\";\nimport Label from \"../utils/Label\";\n\ninterface Props {\n  data: displayData;\n}\n\nfunction Stats({ data }: Props): ReactElement {\n  return (\n    <>\n      Extra Stats\n      <hr className=\"m-auto my-2 w-3/5 border-accent\" />\n      <div className=\"grid gap-3 grid-cols-2\">\n        {data.xpPerRun > 0 && (\n          <Label className=\"col-span-2\">\n            XP Per Run\n            <Input\n              value={addCommas(data.xpPerRun)}\n              disabled={true}\n              className=\"bg-thirdary\"\n            />\n          </Label>\n        )}\n        <Label className=\"col-span-2\">\n          Percent Of Level - {data.percentToLevel}%\n          <div className=\"flex w-full bg-thirdary border border-solid border-accent rounded\">\n            <div\n              className=\"flex flex-col p-1 text-xs bg-green-500 rounded sm:text-base\"\n              style={{ width: `${data.percentToLevel}%` }}\n            >\n              &nbsp;\n            </div>\n          </div>\n        </Label>\n        <Label>\n          Current Zone\n          <Input\n            value={data.currentZone}\n            disabled={true}\n            className=\"bg-thirdary\"\n          />\n        </Label>\n        {data.bonesToLevel > 0 && (\n          <Label>\n            Bones To Level\n            <Input\n              value={data.bonesToLevel}\n              disabled={true}\n              className=\"bg-thirdary\"\n            />\n          </Label>\n        )}\n\n        {data.XPhr > 0 && (\n          <Label className=\"col-span-2\">\n            {data.name} XP/hr\n            <Input\n              value={addCommas(data.XPhr)}\n              disabled={true}\n              className=\"bg-thirdary\"\n            />\n          </Label>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Stats;\n\nfunction addCommas(x: number) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import clsx from \"clsx\";\nimport React from \"react\";\n\nfunction UniverseSwitch({\n  onClick,\n  universe,\n}: {\n  onClick: (u: number) => void;\n  universe: number;\n}) {\n  const handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    let clickedNumber = Number((e.target as HTMLDivElement).title);\n    onClick(clickedNumber);\n  };\n\n  return (\n    <div className=\"flex mx-auto w-max shadow-md\">\n      <div\n        className={clsx(\n          universe === 1\n            ? \"bg-blue-500 text-white\"\n            : \"bg-secondary text-primary\",\n          \"p-1 text-xs border border-r-0 border-solid border-prpl rounded rounded-r-none cursor-pointer select-none sm:text-base\"\n        )}\n        onClick={handleClick}\n        title=\"1\"\n      >\n        Universe 1\n      </div>\n      <div\n        className={clsx(\n          universe === 2\n            ? \"bg-pink-500 text-white\"\n            : \"bg-secondary text-primary\",\n          \"p-1 text-xs border border-l-0 border-solid border-prpl rounded rounded-l-none cursor-pointer select-none sm:text-base\"\n        )}\n        onClick={handleClick}\n        title=\"2\"\n      >\n        Universe 2\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(UniverseSwitch);\n","import clsx from \"clsx\";\nimport React, {\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from \"react\";\nimport { fluffyInstance, handle_paste } from \"../../calculators/fluffy\";\nimport { testSave3 } from \"../../testsaves/three\";\nimport Button from \"../utils/Button\";\nimport InputSection from \"./InputSection\";\nimport LevelUpTable from \"./LevelUpTable\";\nimport RunTimeTable from \"./RunTimeTable\";\nimport Stats from \"./Stats\";\nimport UniverseSwitch from \"./UniverseSwitch\";\n\n// This keeps all update props.\n\nfunction SaveBox({\n  onPaste,\n  save,\n}: {\n  onPaste: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  save?: string;\n}) {\n  const [show, setShow] = useState(true);\n  const textRef = useRef() as MutableRefObject<HTMLTextAreaElement>;\n  return (\n    <>\n      {save && show && (\n        <Button\n          variant=\"small\"\n          className=\"col-span-2 self-center mb-4\"\n          onClick={() => {\n            textRef.current.innerText = save;\n            setShow(!show);\n          }}\n          label=\"Retrieve save\"\n        />\n      )}\n      <textarea\n        className=\"p-2 w-full text-sm bg-secondary border border-solid border-accent rounded outline-none shadow-md resize-none\"\n        onPaste={onPaste}\n        ref={textRef}\n        placeholder=\"Paste your save...\"\n        // defaultValue={instance?.string}\n      />\n    </>\n  );\n}\n\nconst MemoSaveBox = React.memo(SaveBox, (prevProps, nextProps) => {\n  return true;\n});\n\nfunction Template({\n  index,\n  instance,\n}: {\n  index: number;\n  instance: fluffyInstance;\n}) {\n  const [update, setUpdate] = useState(true);\n\n  useEffect(() => {\n    if (false) {\n      instance.pasteSaveActions(testSave3);\n      setUpdate(!update);\n    }\n  }, []);\n\n  if (instance.name === \"init\") {\n    instance.getLocalStorage();\n  }\n\n  const forceRefresh = useCallback(() => {\n    setUpdate((prev) => !prev);\n  }, [setUpdate]);\n\n  const changeUniverse = useCallback(\n    (universe: number) => {\n      if (universe === instance.universe) return;\n\n      instance.updateUniverse(universe);\n      instance.expBonus = instance.getExpBonus();\n      instance.updateDisplayData();\n      forceRefresh();\n    },\n    [instance, forceRefresh]\n  );\n\n  const getPaste = (e: React.ClipboardEvent<HTMLTextAreaElement>) => {\n    let save = handle_paste(e);\n    if (save === false) return;\n    instance.pasteSaveActions(save.game);\n    instance.string = save.string;\n\n    forceRefresh();\n  };\n\n  return (\n    <>\n      <div className=\"grid gap-2 grid-cols-1 content-center py-10 sm:grid-cols-2 md:gap-5 md:grid-cols-4 xl:grid-cols-10\">\n        {/* INPUT AREA */}\n        <div\n          className={clsx(\n            instance.name === \"init\"\n              ? \"col-span-10 justify-self-center w-1/2\"\n              : \"self-center xl:col-span-2 xl:col-start-2\",\n            \"flex flex-wrap justify-center\"\n          )}\n        >\n          <MemoSaveBox onPaste={getPaste} save={instance.string ?? null} />\n          {instance.name !== \"init\" && (\n            <InputSection\n              index={index}\n              instance={instance}\n              universe={instance.universe}\n              renderParent={forceRefresh}\n            />\n          )}\n        </div>\n        {instance.name !== \"init\" && (\n          <>\n            {/* TABLE AREA */}\n            <div className=\"text-center md:col-span-2 xl:col-span-4\">\n              <UniverseSwitch\n                universe={instance.universe}\n                onClick={changeUniverse}\n              />\n\n              <RunTimeTable\n                second={!instance.atMaxEvo()}\n                time={instance.minutesPerRun}\n                data={{\n                  evolution: instance.evolution,\n                  level: instance.level,\n                  table: instance.displayData.table,\n                }}\n              />\n            </div>\n\n            {/* STATS AREA */}\n            <div className=\"text-center sm:col-span-2 sm:mt-3 md:col-span-1 md:mt-0 xl:col-span-2\">\n              <div className=\"m-auto w-1/2 md:w-auto\">\n                <Stats data={instance.displayData} />\n              </div>\n            </div>\n            {Object.keys(instance.displayData.levelUpTable).length > 0 && (\n              <div className=\"col-span-1 m-auto sm:col-span-2 md:col-span-4 xl:col-span-10\">\n                <LevelUpTable table={instance.displayData.levelUpTable} />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <hr className=\"m-auto w-4/6 border-prpl shadow\" />\n    </>\n  );\n}\n\nexport default React.memo(Template, (prevProps, nextProps) => {\n  return prevProps.index === nextProps.index;\n});\n","import React, { useContext } from \"react\";\nimport { FluffyContext } from \"./Context\";\nimport Template from \"./Template\";\n\n// interface Props {\n\n// }\n\nfunction Fluffy() {\n  const { fluffyInstances, anotherInstance, shown } = useContext(FluffyContext);\n\n  return (\n    <>\n      <div className=\"p-5\">\n        {shown!.map((x, index) => {\n          return (\n            <Template\n              index={index}\n              key={index}\n              instance={fluffyInstances![index]}\n            />\n          );\n        })}\n\n        <div className=\"w-full\">\n          <div\n            className=\"relative m-auto w-32 h-32 text-primary fill-current cursor-pointer select-none\"\n            onClick={() => {\n              anotherInstance!();\n            }}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\n            </svg>\n            <div className=\"absolute bottom-0 w-full text-center\">\n              Add Instance\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Fluffy;\n","import clsx from \"clsx\";\nimport React, { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst TITLES = { \"/fluffy\": \"Fluffy Calculator\", \"/daily\": \"Daily Seeker\" };\n\nconst swapTheme = (to: string) => {\n  if (to === \"light-theme\") {\n    localStorage.setItem(\"fluffy-theme\", \"light-theme\");\n    document.body.classList.replace(\"dark-theme\", \"light-theme\");\n  } else {\n    localStorage.setItem(\"fluffy-theme\", \"dark-theme\");\n    document.body.classList.replace(\"light-theme\", \"dark-theme\");\n  }\n};\n\nfunction ThemeSwitcher() {\n  return (\n    <div\n      className=\"absolute right-0 top-0 m-1 p-1 text-primary bg-secondary border border-solid border-green-400 shadow-xl invisible cursor-pointer select-none sm:visible\"\n      onClick={() => {\n        if (document.body.classList.contains(\"light-theme\")) {\n          swapTheme(\"dark-theme\");\n        } else {\n          swapTheme(\"light-theme\");\n        }\n      }}\n    >\n      Swap Theme\n    </div>\n  );\n}\n\nfunction Tab({ location, current }: { location: string; current: boolean }) {\n  return (\n    <Link\n      to={location}\n      className={clsx(\n        current && \"text-prpl border-b-2 border-prpl\",\n        \"inline-block p-3 pb-1 text-base font-extrabold\"\n      )}\n    >\n      {TITLES[location]}\n    </Link>\n  );\n}\n\nfunction NavBar() {\n  useEffect(() => {\n    swapTheme(localStorage.getItem(\"fluffy-theme\"));\n  }, []);\n\n  const location: Location = useLocation();\n\n  const currentLocation = location?.pathname;\n\n  document.title = TITLES[currentLocation] || \"Fluffy Calculator\";\n\n  return (\n    <div className=\"width-full text-center bg-thirdary shadow-md\">\n      <Tab\n        location=\"/fluffy\"\n        current={currentLocation === \"/\" || currentLocation === \"/fluffy\"}\n      />\n      <Tab location=\"/daily\" current={currentLocation === \"/daily\"} />\n\n      <ThemeSwitcher />\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Daily from \"./components/Daily/Daily\";\nimport Fluffy from \"./components/Fluffy/Fluffy\";\nimport NavBar from \"./components/NavBar\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\" hashType=\"noslash\">\n      <main>\n        <NavBar />\n        <Switch>\n          <Route path=\"/daily\" component={Daily} />\n          <Route path=\"/(fluffy|)\" component={Fluffy} />\n        </Switch>\n      </main>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/index.css\";\nimport DailyProvider from \"./components/Daily/Context\";\nimport FluffyProvider from \"./components/Fluffy/Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DailyProvider>\n      <FluffyProvider>\n        <App />\n      </FluffyProvider>\n    </DailyProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}